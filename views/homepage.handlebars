<body>
    <nav class="navbar has-shadow">
        <div class="navbar-brand"> <a class="navbar-item" href="/"><span class="icon">
    <i class="fas fa-home"></i>
  </span>
  <span>Home</span>
</span></a>
        </div>
        <div class="navbar-menu">
            <div class="navbar-end">
                {{!-- <a class="navbar-item">Log-In</a> --}}
                <nav>
                    {{!-- <a class="navbar-item" href="/">Home</a> --}}
                    {{#if loggedIn}}
                    <button id="logout" class="btn-no-style">Logout</button>
                    {{else}}
                    <a class="navbar-item" href="/login">Log-In</a>
                    {{/if}}
                </nav>
                <script src="../public/js/login.js"></script>
                <a class="navbar-item" href="/sign-up" id="signup-button">Sign-Up</a>
            </div>
        </div>
    </nav>
    {{!-- {{#if loggedIn}} --}}
    <section class="section">
        <div class="container">
            <header class="heading">
                <h1 class="title is-1 has-text-primary" id="shadow">Wellness Wizard</h1>
                <p class="subtitle has-text-grey-dark">"Your path to wellness, guided by wizards"</p>
            </header>

            <!-- Wizard Icon -->
            <div class="wizard-container">
                <img src="images/wizard.png" alt="Wizard Icon" class="wizard">
            </div>
            <div class="columns is-multiline">
                <!-- User Info Card -->
                <div class="column">
                    <div class="card user-info" onclick="toggleCardContent(this)">
                        <div class="card-content">
                            <div class="icon-wrapper">
                                <span class="icon"><i class="fas fa-user fa-lg"></i></span>
                            </div>
                            <h2 class="title">User Info</h2>
                            <ul class="list-none p-0 content">
                                <li>Name: {{name}}</li>
                                <li>Gender: {{gender}}</li>
                                <li>Height: {{height}}</li>
                                <li>Weight: {{weight}}</li>
                            </ul>
                        </div>
                    </div>
                </div>
                {{!-- user BMR (basal metabolic rate) equation for target daily calories for user input data --}}
               

                <!-- Magical Inspiration Card -->
                <div class="column">
                    <div class="card magical-inspiration" onclick="toggleCardContent(this)">
                        <div class="card-content">
                            <div class="icon-wrapper">
                                <span class="icon"><i class="fas fa-magic fa-lg"></i></span>
                            </div>
                            <h2 class="title">Magical Inspiration</h2>
                            <h4></h4>
                            <p><small>Date:</small></p>
                        </div>
                    </div>
                </div>

                <!-- Hydration Tracker Card -->
                <div class="column">
    <div class="card hydration-tracker" onclick="toggleCardContent(this)">
        <div class="card-content">
            <div class="icon-wrapper">
                <span class="icon"><i class="fas fa-tint fa-lg"></i></span>
            </div>
            <h2 class="title">Hydration Tracker</h2>
            <p>You have consumed {{waterConsumption}} liters of water today.</p>
            <form action="/api/hydration" class="my-2" id="create-hydration">
                <div class="input-group">
                    <label for="waterAmount" class="block mb-1">Total Water:</label>
                    <input type="number" id="totalDailyWater" name="totalDailyWater" min="0" step="1"
                        class="block w-full p-1 mb-2 border rounded">
                    <button type="submit"
                        class="block w-full p-1 border rounded bg-blue-500 hover:bg-blue-700 text-white">Update</button>
                </div>
                <div class="input-group">
                    <label for="waterAmount" class="block mb-1">Target Water:</label>
                    <input type="number" id="targetDailyWater" name="targetDailyWater" min="0" step="1"
                        class="block w-full p-1 mb-2 border rounded">
                    <button type="submit"
                        class="block w-full p-1 border rounded bg-blue-500 hover:bg-blue-700 text-white">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

                {{!-- user hydration equation for target hydration from user input data --}}
      
            </div>


            <div class="columns is-multiline">
                <!-- Fitness Tracker Card -->
                <div class="column">
    <div class="card fitness-tracker">
        <div class="card-content">
            <div class="icon-wrapper">
                <span class="icon"><i class="fas fa-running fa-lg"></i></span>
            </div>
            <h2 class="title">Fitness Tracker</h2>
            <div id="workouts-list">
                <!-- Workouts will be appended here -->
            </div>
            <div class="input-group">
                <label for="workout" class="block mb-1">Log Workout:</label>
                <input type="text" id="workout" name="workout" class="block w-full p-1 mb-2 border rounded" placeholder="Workout">
                <input type="number" id="sets" name="sets" class="block w-full p-1 mb-2 border rounded" placeholder="Sets">
                <input type="number" id="reps" name="reps" class="block w-full p-1 mb-2 border rounded" placeholder="Reps">
                <label for="difficulty" class="block mb-1">Difficulty:</label>
                <div class="difficulty-buttons">
                    <button style="background-color: lightgreen;" onmouseover="this.style.backgroundColor='green'" onmouseout="this.style.backgroundColor='lightgreen'" onclick="addWorkout('Easy')">Easy</button>
                    <button style="background-color: #DAA520;" onmouseover="this.style.backgroundColor='#FFD700'" onmouseout="this.style.backgroundColor='#DAA520'" onclick="addWorkout('Medium')">Medium</button>
                    <button style="background-color: orange;" onmouseover="this.style.backgroundColor='darkorange'" onmouseout="this.style.backgroundColor='orange'" onclick="addWorkout('Hard')">Hard</button>
                    <button style="background-color: red;" onmouseover="this.style.backgroundColor='darkred'" onmouseout="this.style.backgroundColor='red'" onclick="addWorkout('Very Hard')">Very Hard</button>
                </div>
            </div>
        </div>
    </div>
</div>

                <!-- Sleep Log Card -->
                <div class="column">
                    <div class="card sleep-log" onclick="toggleCardContent(this)">
                        <div class="card-content">
                            <div class="icon-wrapper">
                                <span class="icon"><i class="fas fa-bed fa-lg"></i></span>
                            </div>
                            <h2 class="title">Sleep Log</h2>
                            <p>You slept for {{totalSleep}} hours last night.</p>
                        </div>
                    </div>
                </div>

                <!-- Calorie Intake Card -->
                <div class="column">
                    <div class="card calorie-intake" onclick="toggleCardContent(this)">
                        <div class="card-content">
                            <div class="icon-wrapper">
                                <span class="icon"><i class="fas fa-apple-alt fa-lg"></i></span>
                            </div>
                            <h2 class="title">Calorie Intake</h2>
                            <p>You have consumed {{calorieIntake}}/2500 calories today.</p>
                            <label for="calorieAmount" class="block mb-1">Target calorie intake:</label>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="overlay" onclick="toggleOverlay()"></div>

    <style>
        body {
            font-family: 'Georgia, serif';
            overflow-x: hidden;
        }

        .title,
        .subtitle {
            display: block;
            text-align: center;
        }

        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 20px;
            cursor: pointer;
            display: none;
            /* Initially hidden */
        }

        .card.active .close-btn {
            display: block;
            /* Display when card is active */
        }


        .heading {
            height: 120px;
            text-align: center;
            line-height: 120px;
        }

        .container,
        .section {
            width: 100%;
            text-align: center;
        }

        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 999;
        }

        .overlay.active {
            display: block;
        }

        .card {
            transition: transform 0.5s ease-in-out, z-index 0.5s ease-in-out;
        }

        .card.active {
            z-index: 1000;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(2);
        }

        .card-content {
            padding: 1rem;
            cursor: pointer;
        }

        .wizard-container {
            text-align: center;
            position: relative;
            height: 150px;
            margin-bottom: -40px;
            overflow: hidden;
        }

        .wizard {
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 140px;
            animation: wizardCycling 15s linear infinite;
        }

        @keyframes wizardCycling {

            0%,
            100% {
                transform: translateY(0) rotate(0) translateX(-50%);
            }

            10% {
                transform: translateY(-20px) rotate(15deg) translateX(-50%);
            }

            20% {
                transform: translateY(0) rotate(0) translateX(-50%);
            }

            30% {
                transform: translateY(-20px) rotate(-15deg) translateX(-50%);
            }

            40% {
                transform: translateY(0) rotate(0) translateX(-50%);
            }

            60% {
                transform: translateY(0) rotate(0) translateX(-60%);
            }

            70% {
                transform: translateY(0) rotate(0) translateX(-40%);
            }

            85% {
                transform: translateY(-10px) rotate(5deg) translateX(-55%);
            }

            95% {
                transform: translateY(-10px) rotate(-5deg) translateX(-45%);
            }
        }
    </style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const quotes = [
            "Your limitation—it's only your imagination.",
            "Push yourself, because no one else is going to do it for you.",
            "Sometimes later becomes never. Do it now.",
            "Great things never come from comfort zones.",
            "Dream it. Wish it. Do it.",
            "Success doesn't just find you. You have to go out and get it.",
            "The harder you work for something, the greater you'll feel when you achieve it.",
            "Dream bigger. Do bigger.",
            "Don't stop when you're tired. Stop when you're done.",
            "Wake up with determination. Go to bed with satisfaction.",
        ];

        let startDate = Date.UTC(2023, 8, 21);
        let currentDate = new Date();

        let differenceInTime = currentDate.getTime() - startDate;
        let differenceInDays = Math.floor(differenceInTime / (1000 * 3600 * 24));

        if (differenceInDays < 0) {
            console.error("Start date is in the future");
            return;
        }

        let index = differenceInDays % quotes.length;
        document.querySelector('.magical-inspiration h4').innerText = `"${quotes[index]}"`;

        let displayDate = currentDate.toLocaleDateString();
        document.querySelector('.magical-inspiration p small').textContent = `Date: ${displayDate}`;
        
        window.workouts = [];
    });

    window.addWorkout = function(difficulty) {
        let workoutElement = document.getElementById('workout');
        let setsElement = document.getElementById('sets');
        let repsElement = document.getElementById('reps');

        let workout = workoutElement.value.trim();
        let sets = setsElement.value.trim();
        let reps = repsElement.value.trim();

        if (workout === "" || sets === "" || reps === "") {
            return alert('Please fill out all fields');
        }

        const workoutsList = document.getElementById('workouts-list');

        let workoutItem = document.createElement('div');
        workoutItem.className = 'workout-item';
        let difficultyColor = getDifficultyColor(difficulty);
        workoutItem.innerHTML = `<p><strong>${workout}:</strong> ${sets} sets of ${reps} reps <span style="background-color: ${difficultyColor};">${difficulty}</span></p>`;
        workoutsList.appendChild(workoutItem);

        workoutElement.value = '';
        setsElement.value = '';
        repsElement.value = '';
    }

    function getDifficultyColor(difficulty) {
        switch (difficulty) {
            case 'Easy':
                return 'lightgreen';
            case 'Medium':
                return '#DAA520';
            case 'Hard':
                return 'orange';
            case 'Very Hard':
                return 'red';
            default:
                return 'white';
        }
    }
</script>

    <script src="/js/homepage.js"></script>
</body>